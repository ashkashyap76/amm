/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapRouterUpgradeable,
  SwapRouterUpgradeableInterface,
} from "../../../contracts/SwapRouterUpgradeable.sol/SwapRouterUpgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "CommonError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TokenSwapped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
    ],
    name: "TradedReserveUpdatedUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "getUserTrades",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct StructTradedPrice[]",
        name: "tradedReserve",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "token0Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct StructTradedPrice",
        name: "lastTradedReserve",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isTraded",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "weth_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapEthForTokensV2",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user_",
        type: "address",
      },
      {
        internalType: "address",
        name: "router_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountInTokens_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut_",
        type: "address",
      },
    ],
    name: "swapTokensForTokensV2",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a080604052346100ea57306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c166100d9576002600160401b03196001600160401b03821601610073575b60405161192190816100f08239608051818181610c230152610cf70152f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a13880610054565b63f92ee8a960e01b60005260046000fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80633f4ba83a14610ebb5780634f1ef28614610c7a57806352d1902d14610c105780635c975abb14610be0578063715018a614610b765780637185a0e51461098b5780638456cb59146109175780638da5cb5b146108e1578063ad3cb1cc14610865578063bcb109d91461058b578063c4d66de8146103b8578063d4c95938146100dd5763f2fde38b0361000e57346100d85760203660031901126100d8576100196100cb610f3e565b6100d36110f4565b61107e565b600080fd5b60603660031901126100d8576100f1610f3e565b6100f9610f54565b90610102610f6a565b61010a61112a565b610112611154565b6040516315ab88c960e31b81526001600160a01b038416929091602083600481875afa92831561028d57600093610397575b506001600160a01b038316928315610358576001600160a01b03821680156103125734156102d8576040519461017b606087610fb2565b60028652604036602088013761019086611042565b5261019a8561104f565b52603c4201938442116102c2576101d66000916040519687928392637ff36ab560e01b845285600485015260806024850152608484019061120a565b6001600160a01b03881660448401526064830191909152038134895af193841561028d57600094610299575b506020600494956040519586809263c45a015560e01b82525afa801561028d576102589661023a9560009261025c575b504294611292565b60016000805160206118ac8339815191525560405191829182610ff0565b0390f35b61027f91925060203d602011610286575b6102778183610fb2565b81019061105f565b9088610232565b503d61026d565b6040513d6000823e3d90fd5b600494506102bb6020913d806000833e6102b38183610fb2565b810190611190565b9450610202565b634e487b7160e01b600052601160045260246000fd5b6040516306aa903f60e11b81526020600482015260116024820152704574682076616c756520696e207a65726f60781b6044820152606490fd5b6040516306aa903f60e11b815260206004820152601d60248201527f546f6b656e20696e206f72206f7574207a65726f20616464726573732e0000006044820152606490fd5b6040516306aa903f60e11b8152602060048201526016602482015275496e76616c696420726f75746572206164647265737360501b6044820152606490fd5b6103b191935060203d602011610286576102778183610fb2565b9185610144565b346100d85760203660031901126100d8576103d1610f3e565b6000805160206118cc833981519152549060ff8260401c16159167ffffffffffffffff811680159081610583575b6001149081610579575b159081610570575b5061055f5767ffffffffffffffff1981166001176000805160206118cc8339815191525582610532575b506104446117bc565b61044c6117bc565b60ff1960008051602061188c833981519152541660008051602061188c833981519152556104786117bc565b6104806117bc565b6104893361107e565b6104916117bc565b6104996117bc565b6104a16117bc565b60016000805160206118ac8339815191525560018060a01b03166bffffffffffffffffffffffff60a01b60015416176001556104d957005b68ff0000000000000000196000805160206118cc83398151915254166000805160206118cc833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff191668010000000000000001176000805160206118cc833981519152558261043b565b63f92ee8a960e01b60005260046000fd5b90501584610411565b303b159150610409565b8491506103ff565b346100d85760a03660031901126100d8576105a4610f3e565b6105ac610f54565b906105b5610f6a565b6084356001600160a01b03811692606435929091908482036100d8576105d961112a565b6105e1611154565b6001600160a01b0386811695908216908115801561085d575b610312576040516315ab88c960e31b81526020816004818b5afa90811561028d5760009161083e575b506001600160a01b031615610358576001546001600160a01b031682146107ee5760206000604051828101906323b872dd60e01b82523360248201523060448201528960648201526064815261067a608482610fb2565b519082865af11561028d576000513d6107e55750813b155b6107d05760405163095ea7b360e01b81528760048201528660248201526020816044816000875af1801561028d57610798575b50604051916106d5606084610fb2565b6002835260403660208501376106ea83611042565b526106f48261104f565b52603c4201908142116102c2576107369560009260405197889384936338ed173960e01b8552600485015285602485015260a0604485015260a484019061120a565b6001600160a01b03881660648401526084830191909152038183895af193841561028d5760009461029957506020600494956040519586809263c45a015560e01b82525afa801561028d576102589661023a9560009261025c57504294611292565b6020813d6020116107c8575b816107b160209383610fb2565b810103126100d8575180151581146106c557600080fd5b3d91506107a4565b50635274afe760e01b60005260045260246000fd5b60011415610692565b6040516306aa903f60e11b815260206004820152602160248201527f4f6e6c792075736520657263323020746f6b656e20617320746f6b656e496e5f6044820152601760f91b6064820152608490fd5b610857915060203d602011610286576102778183610fb2565b89610623565b5080156105fa565b346100d85760003660031901126100d85760408051906108858183610fb2565b60058252640352e302e360dc1b6020830152805180926020825280519081602084015260005b8281106108ca5750506000828201840152601f01601f19168101030190f35b6020828201810151878301870152869450016108ab565b346100d85760003660031901126100d85760008051602061184c833981519152546040516001600160a01b039091168152602090f35b346100d85760003660031901126100d8576109306110f4565b61093861112a565b600160ff1960008051602061188c83398151915254161760008051602061188c833981519152557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346100d85760803660031901126100d8576109a4610f3e565b6109ac610f54565b6109b4610f6a565b606435916001600160a01b03831683036100d85760405160006109d682610f80565b80825260208083018290526040808401929092526001600160a01b039687166000908152808252828120948816815293815281842094871684529384528083209490951682529290915291909120805490610a308261102a565b91610a3e6040519384610fb2565b80835260208301809260005260206000206000915b838310610b3f57505083519150508015610b3657600190815b610af8575b506040519260a084019060a085525180915260c08401929060005b818110610ac457505050610ab9839460208501906040809180518452602081015160208501520151910152565b151560808301520390f35b9091936020606082610aed60019489516040809180518452602081015160208501520151910152565b019501929101610a8c565b90935060001981019081116102c2578251811015610b205760051b8201602001519284610a71565b634e487b7160e01b600052603260045260246000fd5b60009081610a6c565b60036020600192604051610b5281610f80565b85548152848601548382015260028601546040820152815201920192019190610a53565b346100d85760003660031901126100d857610b8f6110f4565b60008051602061184c83398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100d85760003660031901126100d857602060ff60008051602061188c83398151915254166040519015158152f35b346100d85760003660031901126100d8577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610c6957602060405160008051602061186c8339815191528152f35b63703e46dd60e11b60005260046000fd5b60403660031901126100d857610c8e610f3e565b6024359067ffffffffffffffff82116100d857366023830112156100d857816004013590610cbb82610fd4565b91610cc96040519384610fb2565b808352602083019336602483830101116100d857816000926024602093018737840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610e98575b50610c6957610d2f6110f4565b6040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa60009181610e64575b50610d745784634c9c8ce360e01b60005260045260246000fd5b8060008051602061186c833981519152869203610e505750823b15610e3c5760008051602061186c83398151915280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2825115610e215760008091610019945190845af43d15610e19573d91610dfc83610fd4565b92610e0a6040519485610fb2565b83523d6000602085013e6117ea565b6060916117ea565b50505034610e2b57005b63b398979f60e01b60005260046000fd5b634c9c8ce360e01b60005260045260246000fd5b632a87526960e21b60005260045260246000fd5b9091506020813d602011610e90575b81610e8060209383610fb2565b810103126100d857519086610d5a565b3d9150610e73565b60008051602061186c833981519152546001600160a01b03161415905084610d22565b346100d85760003660031901126100d857610ed46110f4565b60008051602061188c8339815191525460ff811615610f2d5760ff191660008051602061188c833981519152557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b60005260046000fd5b600435906001600160a01b03821682036100d857565b602435906001600160a01b03821682036100d857565b604435906001600160a01b03821682036100d857565b6060810190811067ffffffffffffffff821117610f9c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610f9c57604052565b67ffffffffffffffff8111610f9c57601f01601f191660200190565b602060408183019282815284518094520192019060005b8181106110145750505090565b8251845260209384019390920191600101611007565b67ffffffffffffffff8111610f9c5760051b60200190565b805115610b205760200190565b805160011015610b205760400190565b908160209103126100d857516001600160a01b03811681036100d85790565b6001600160a01b031680156110de5760008051602061184c83398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b60008051602061184c833981519152546001600160a01b0316330361111557565b63118cdaa760e01b6000523360045260246000fd5b60ff60008051602061188c833981519152541661114357565b63d93c066560e01b60005260046000fd5b60026000805160206118ac833981519152541461117f5760026000805160206118ac83398151915255565b633ee5aeb560e01b60005260046000fd5b6020818303126100d85780519067ffffffffffffffff82116100d857019080601f830112156100d85781516111c48161102a565b926111d26040519485610fb2565b81845260208085019260051b8201019283116100d857602001905b8282106111fa5750505090565b81518152602091820191016111ed565b906020808351928381520192019060005b8181106112285750505090565b82516001600160a01b031684526020938401939092019160010161121b565b80549068010000000000000000821015610f9c5760018201808255821015610b2057600291604091600052600360206000209102019280518455602081015160018501550151910155565b60405163e6a4390560e01b81526001600160a01b0394851660048201819052958516602482018190529294919360009260209183916044918391165afa9081156115f357829161175b575b506001600160a01b031694851561171f57604051630240bc6b60e21b8152916060836004818a5afa92831561163657819082946116bd575b506001600160701b039384169316801580806116b5575b61166f5760206004996040519a8b8092630dfe168160e01b82525afa988915611664578399611643575b5060405163313ce56760e01b815292602084600481885afa9384156116365781946115fe575b5060405163313ce56760e01b81529960208b6004818b5afa9a8b156115f357829b6115bb575b506001600160a01b0316850361151b5750670de0b6b3a76400008202918204670de0b6b3a76400001417156102c2576113dd6113e39261178e565b9061179c565b91670de0b6b3a7640000810290808204670de0b6b3a764000014901517156102c2577f2c78248590e6945f51f327f2e607dbf0e1852fd0c5ea2a47f8f6d612551a61f6976114396114f7926113dd60a09a61178e565b955b6001808a1b031680600052600060205260406000206001808b1b03891660005260205260406000208460005260205260406000208660005260205261149f60406000206040519061148b82610f80565b878252896020830152846040830152611247565b600052600060205260406000206001808a1b0388166000526020526040600020856000526020526040600020836000526020526040600020604051916114e483610f80565b8783528560208401526040830152611247565b60405194600180881b031685526020850152604084015260608301526080820152a1565b670de0b6b3a764000086939492960292808404670de0b6b3a764000014901517156115a75750906113dd61154e9261178e565b92670de0b6b3a76400008202918204670de0b6b3a76400001417156102c2577f2c78248590e6945f51f327f2e607dbf0e1852fd0c5ea2a47f8f6d612551a61f6976115a16114f7926113dd60a09a61178e565b9561143b565b634e487b7160e01b81526011600452602490fd5b909a506020813d6020116115eb575b816115d760209383610fb2565b810103126115e7575199386113a2565b5080fd5b3d91506115ca565b6040513d84823e3d90fd5b9093506020813d60201161162e575b8161161a60209383610fb2565b8101031261162a5751923861137c565b8380fd5b3d915061160d565b50604051903d90823e3d90fd5b61165d91995060203d602011610286576102778183610fb2565b9738611356565b6040513d85823e3d90fd5b6040516306aa903f60e11b815260206004820152601760248201527f52657365727665732063616e6e6f74206265207a65726f0000000000000000006044820152606490fd5b50841561132c565b9350506060833d606011611717575b816116d960609383610fb2565b81010312611714576116ea8361177a565b60406116f86020860161177a565b94015163ffffffff8116036115e7576001600160701b03611315565b80fd5b3d91506116cc565b6040516306aa903f60e11b815260206004820152601360248201527214185a5c88191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b611774915060203d602011610286576102778183610fb2565b386112dd565b51906001600160701b03821682036100d857565b604d81116102c257600a0a90565b81156117a6570490565b634e487b7160e01b600052601260045260246000fd5b60ff6000805160206118cc8339815191525460401c16156117d957565b631afcd79f60e31b60005260046000fd5b9061181057508051156117ff57805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580611842575b611821575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561181956fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220a1f04082dfd99a426f25c5d00b3a9da4bb9a010578590ef4ede2dc43302f033a64736f6c634300081a0033";

type SwapRouterUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapRouterUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapRouterUpgradeable__factory extends ContractFactory {
  constructor(...args: SwapRouterUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapRouterUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SwapRouterUpgradeable__factory {
    return super.connect(runner) as SwapRouterUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapRouterUpgradeableInterface {
    return new Interface(_abi) as SwapRouterUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapRouterUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SwapRouterUpgradeable;
  }
}
